# -*- coding: utf-8 -*-
"""aggregated_queries

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Hihd539Jqmybqx_g3d8N-T5AEhIS_4fS
"""

import re

def nlq_to_sql(nl_query):
    nl_query = nl_query.lower().strip()

    # Default SQL (if nothing matches)
    sql = "SELECT * FROM students;"

    # AVG
    if "average" in nl_query or "avg" in nl_query:
        if "marks" in nl_query:
            sql = "SELECT AVG(marks) FROM students;"
        elif "age" in nl_query:
            sql = "SELECT AVG(age) FROM students;"

    # MAX
    elif "maximum" in nl_query or "max" in nl_query or "highest" in nl_query:
        if "marks" in nl_query:
            sql = "SELECT MAX(marks) FROM students;"
        elif "age" in nl_query:
            sql = "SELECT MAX(age) FROM students;"

    # MIN
    elif "minimum" in nl_query or "min" in nl_query or "lowest" in nl_query:
        if "marks" in nl_query:
            sql = "SELECT MIN(marks) FROM students;"
        elif "age" in nl_query:
            sql = "SELECT MIN(age) FROM students;"

    # SUM
    elif "sum" in nl_query or "total" in nl_query:
        if "marks" in nl_query:
            sql = "SELECT SUM(marks) FROM students;"
        elif "age" in nl_query:
            sql = "SELECT SUM(age) FROM students;"

    # COUNT
    elif "count" in nl_query or "number of" in nl_query:
        if "students" in nl_query:
            sql = "SELECT COUNT(*) FROM students;"
        elif "grade" in nl_query:
            match = re.search(r"grade\s+([a-z])", nl_query)
            if match:
                grade = match.group(1).upper()
                sql = f"SELECT COUNT(*) FROM students WHERE grade = '{grade}';"
            else:
                sql = "SELECT COUNT(*) FROM students;"

    return sql


# Main program
if __name__ == "__main__":
    print("Natural Language to SQL Converter (Aggregation Queries)")
    print("Examples:")
    print("- Find average marks of students")
    print("- Show maximum age of students")
    print("- Count the number of students\n")

    user_query = input("Enter your query: ")
    sql_query = nlq_to_sql(user_query)

    print("\nGenerated SQL Query:")
    print(sql_query)